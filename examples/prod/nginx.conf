upstream gateway {
    server gateway:8000;
}

upstream minio {
    server minio:9000;
}

upstream grafana {
    server grafana:3000;
}

server {
    listen 80;
    listen [::]:80;

    server_name <domain_name>;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name <domain_name>;
    server_tokens off;

    client_max_body_size 25G;

    ssl_certificate /etc/letsencrypt/live/<domain_name>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<domain_name>/privkey.pem;

    charset utf-8;

    gzip on;
    gzip_disable "msie6";
    gzip_min_length 1000;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types *;

    location /api {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://gateway;
    }

    location /api/metrics {
        deny all;
        return 403;
    }

    location /files {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Authorization "";
        proxy_redirect off;
        proxy_pass http://minio;
    }

    location /monitoring {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        set $connection_upgrade '';
        if ($http_upgrade = "websocket") {
            set $connection_upgrade 'upgrade';
        }

        proxy_redirect off;
        proxy_pass http://grafana;
    }

    if ($http_host !~ "^<domain_name>$"){
        rewrite ^(.*)$ https://<domain_name>$1 redirect;
    }
}
