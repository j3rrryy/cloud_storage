volumes:
  auth_postgres_data:
  auth_redis_data:
  files_minio_data:
  files_postgres_data:
  files_redis_data:
  mail_zookeper_secrets:
  mail_zookeper_data:
  mail_zookeper_log:
  mail_kafka_config:
  mail_kafka_data:
  mail_kafka_secrets:
  prometheus_data:
  grafana_data:
  certbot_conf:
  certbot_www:

networks:
  nginx_network:
  main_network:
  auth_network:
  files_network:
  mail_network:


services:
  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_conf:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    networks:
      - nginx_network
    depends_on:
      - gateway
    container_name: nginx_prod

  gateway:
    image: ghcr.io/j3rrryy/cloud_storage:gateway-latest
    pull_policy: always
    restart: always
    expose:
      - 8000
    env_file:
      - ./.env
    networks:
      - nginx_network
      - main_network
    depends_on:
      - auth
      - files
      - mail
    command: python ./main.py
    container_name: gateway_prod

  auth:
    image: ghcr.io/j3rrryy/cloud_storage:auth-latest
    pull_policy: always
    restart: always
    expose:
      - 50051
      - 8000
    env_file:
      - ./.env
    networks:
      - main_network
      - auth_network
    depends_on:
      - auth_postgres
      - auth_redis
    command: bash -c "alembic -c "./config/alembic.ini" upgrade head && python ./main.py"
    container_name: auth_prod

  auth_postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - ./.env
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data/
    networks:
      - auth_network
    hostname: postgres
    container_name: auth_postgres_prod

  auth_redis:
    image: redis:alpine
    restart: always
    volumes:
      - auth_redis_data:/data/
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - auth_network
    hostname: redis
    container_name: auth_redis_prod

  files:
    image: ghcr.io/j3rrryy/cloud_storage:files-latest
    pull_policy: always
    restart: always
    expose:
      - 50051
      - 8000
    env_file:
      - ./.env
    networks:
      - main_network
      - files_network
    depends_on:
      - files_minio
      - files_postgres
      - files_redis
    command: bash -c "alembic -c "./config/alembic.ini" upgrade head && python ./main.py"
    container_name: files_prod

  files_minio:
    image: minio/minio:latest
    restart: always
    env_file:
      - ./.env
    volumes:
      - files_minio_data:/data
    networks:
      - nginx_network
      - files_network
    hostname: minio
    command: server /data
    container_name: files_minio_prod

  files_postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - ./.env
    volumes:
      - files_postgres_data:/var/lib/postgresql/data/
    networks:
      - files_network
    hostname: postgres
    container_name: files_postgres_prod

  files_redis:
    image: redis:alpine
    restart: always
    volumes:
      - files_redis_data:/data/
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - files_network
    hostname: redis
    container_name: files_redis_prod

  mail_zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    expose:
      - 2181
    env_file:
      - ./.env
    volumes:
      - mail_zookeper_secrets:/etc/zookeeper/secrets
      - mail_zookeper_data:/var/lib/zookeeper/data
      - mail_zookeper_log:/var/lib/zookeeper/log
    networks:
      - mail_network
    hostname: zookeeper
    container_name: mail_zookeper_prod

  mail_kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    expose:
      - 9092
    env_file:
      - ./.env
    volumes:
      - mail_kafka_config:/mnt/shared/config
      - mail_kafka_data:/var/lib/kafka/data
      - mail_kafka_secrets:/etc/kafka/secrets
    networks:
      - main_network
      - mail_network
    depends_on:
      - mail_zookeeper
    hostname: kafka
    container_name: mail_kafka_prod

  mail:
    image: ghcr.io/j3rrryy/cloud_storage:mail-latest
    pull_policy: always
    restart: always
    expose:
      - 8000
    env_file:
      - ./.env
    networks:
      - main_network
      - mail_network
    depends_on:
      - mail_kafka
    command: python ./main.py
    container_name: mail_prod

  prometheus:
    image: prom/prometheus:latest
    restart: always
    expose:
      - 9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - main_network
    command: --config.file=/etc/prometheus/prometheus.yml
    container_name: prometheus_prod

  grafana:
    image: grafana/grafana:latest
    restart: always
    expose:
      - 3000
    env_file:
      - ./.env
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - nginx_network
      - main_network
    depends_on:
      - prometheus
    container_name: grafana_prod
