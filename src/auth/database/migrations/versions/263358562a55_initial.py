"""initial

Revision ID: 263358562a55
Revises:
Create Date: 2025-02-28 22:50:48.900501

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "263358562a55"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("registered", sa.TIMESTAMP(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("user_ip", sa.String(), nullable=False),
        sa.Column("browser", sa.String(), nullable=False),
        sa.Column("last_accessed", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("refresh_token"),
    )
    op.create_table(
        "access_tokens",
        sa.Column("access_token", sa.String(), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["refresh_token"], ["refresh_tokens.refresh_token"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("access_token"),
        sa.UniqueConstraint("access_token"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("access_tokens")
    op.drop_table("refresh_tokens")
    op.drop_table("users")
    # ### end Alembic commands ###
